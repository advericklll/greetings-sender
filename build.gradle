plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.3.Final'
	compileOnly('org.mapstruct:mapstruct-processor:1.5.3.Final')
	annotationProcessor('org.mapstruct:mapstruct-processor:1.5.3.Final')
	// https://mvnrepository.com/artifact/org.projectlombok/lombok-mapstruct-binding
	implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.1.0'
	// https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
	implementation group: 'org.xerial', name: 'sqlite-jdbc'
	// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-community-dialects
	implementation group: 'org.hibernate.orm', name: 'hibernate-community-dialects', version: '6.1.7.Final'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs= ["src/main/java"]
		}
		resources {
			srcDirs= ["src/main/resources"]
		}
	}
}


tasks.register('copyReportsForArchiving', Copy) {
	from layout.projectDirectory.file("src/main/resources/mydb.db"), layout.projectDirectory.file("src/main/resources/persons.txt")
	into layout.buildDirectory.dir("libs/src/main/resources/")
}
